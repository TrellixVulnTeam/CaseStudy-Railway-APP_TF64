'use strict';

var Twilio = require('twilio/lib/rest/Twilio');
var webhooks = require('twilio/lib/webhooks/webhooks');
var obsolete = require('twilio/lib/base/obsolete');

// Shorthand to automatically create a RestClient
var initializer = function(accountSid, authToken, opts) {
    return new Twilio(accountSid, authToken, opts);
};

// Main functional components of the Twilio module
initializer.Twilio = Twilio;
initializer.jwt = {
    AccessToken: require('twilio/lib/jwt/AccessToken'),
    ClientCapability: require('twilio/lib/jwt/ClientCapability'),
    taskrouter: {
        TaskRouterCapability: require('twilio/lib/jwt/taskrouter/TaskRouterCapability'),
        util: require('twilio/lib/jwt/taskrouter/util')
    }
};
initializer.twiml = {
    VoiceResponse: require('twilio/lib/twiml/VoiceResponse'),
    MessagingResponse: require('twilio/lib/twiml/MessagingResponse'),
    FaxResponse: require('twilio/lib/twiml/FaxResponse')
};

// Add obsolete clients
initializer.RestClient = obsolete.RestClient;
initializer.PricingClient = obsolete.PricingClient;
initializer.MonitorClient = obsolete.MonitorClient;
initializer.TaskRouterClient = obsolete.TaskRouterClient;
initializer.IpMessagingClient = obsolete.IpMessagingClient;
initializer.LookupsClient = obsolete.LookupsClient;
initializer.TrunkingClient = obsolete.TrunkingClient;

// Setup webhook helper functionality
initializer.validateRequest = webhooks.validateRequest;
initializer.validateExpressRequest = webhooks.validateExpressRequest;
initializer.webhook = webhooks.webhook;

// Public module interface is a function, which passes through to RestClient constructor
module.exports = initializer;